import React, { ReactNode, useEffect, useState } from 'react';
import { Printer, X } from 'lucide-react';

interface PrintableViewProps {
  children: ReactNode;
  title: string;
  onClose: () => void;
  isOpen: boolean;
}

const PrintableView: React.FC<PrintableViewProps> = ({
  children,
  title,
  onClose,
  isOpen
}) => {
  const [isPrinting, setIsPrinting] = useState(false);

  useEffect(() => {
    // Add print media listener
    const beforePrintHandler = () => {
      setIsPrinting(true);
    };
    
    const afterPrintHandler = () => {
      setIsPrinting(false);
    };
    
    window.addEventListener('beforeprint', beforePrintHandler);
    window.addEventListener('afterprint', afterPrintHandler);
    
    return () => {
      window.removeEventListener('beforeprint', beforePrintHandler);
      window.removeEventListener('afterprint', afterPrintHandler);
    };
  }, []);

  const handlePrint = () => {
    window.print();
  };

  if (!isOpen) return null;

  return (
    <div className={`fixed inset-0 z-50 bg-white ${isPrinting ? 'print-view' : ''}`}>
      {/* Header - only visible on screen, not when printing */}
      <div className="print:hidden bg-gray-900 text-white p-4 flex items-center justify-between">
        <h1 className="text-xl font-bold font-orbitron">{title}</h1>
        <div className="flex items-center gap-4">
          <button
            onClick={handlePrint}
            className="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-jetbrains transition-all duration-200"
            aria-label="Print document"
          >
            <Printer size={16} />
            Print
          </button>
          <button
            onClick={onClose}
            className="p-2 bg-gray-700 hover:bg-gray-600 text-gray-300 hover:text-white rounded-lg transition-all duration-200"
            aria-label="Close print view"
          >
            <X size={20} />
          </button>
        </div>
      </div>
      
      {/* Content */}
      <div className="p-8 print:p-0">
        {/* Print-only header */}
        <div className="hidden print:block mb-8">
          <h1 className="text-2xl font-bold text-black text-center">{title}</h1>
          <div className="text-sm text-gray-600 text-center">
            Printed on {new Date().toLocaleDateString()} at {new Date().toLocaleTimeString()}
          </div>
        </div>
        
        {/* Main content */}
        <div className="print:text-black">
          {children}
        </div>
      </div>
      
      {/* Print-only footer */}
      <div className="hidden print:block fixed bottom-0 w-full p-4 text-center text-sm text-gray-500">
        Generated by Direktor Tournament Manager
      </div>
      
      {/* Print styles */}
      <style jsx>{`
        @media print {
          body {
            background: white;
            color: black;
            font-size: 12pt;
          }
          
          table {
            width: 100%;
            border-collapse: collapse;
          }
          
          th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
          }
          
          th {
            background-color: #f2f2f2;
            font-weight: bold;
          }
          
          tr:nth-child(even) {
            background-color: #f9f9f9;
          }
        }
      `}</style>
    </div>
  );
};

export default PrintableView;